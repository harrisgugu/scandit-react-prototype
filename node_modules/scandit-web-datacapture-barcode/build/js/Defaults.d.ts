import { CameraSettings, Color } from "scandit-web-datacapture-core";
import type { CameraSettingsDefaultsJSON } from "scandit-web-datacapture-core/build/js/Defaults";
import { SymbologyDescription } from "./SymbologyDescription";
import { SymbologySettings } from "./SymbologySettings";
import type { PrivateCompositeTypeDescription, Symbology } from "./Barcode";
declare type BarcodeCaptureOverlayStyle = any;
declare type BarcodeTrackingBasicOverlayStyle = any;
export interface Defaults {
    SymbologySettings: {
        [key in Symbology]: SymbologySettings;
    };
    SymbologyDescriptions: SymbologyDescription[];
    CompositeTypeDescriptions: PrivateCompositeTypeDescription[];
    BarcodeCapture: {
        BarcodeCaptureOverlay: {
            defaultStyle: BarcodeCaptureOverlayStyle;
            DefaultBrush: {
                fillColor: Color;
                strokeColor: Color;
                strokeWidth: number;
            };
            styles: {
                [key in BarcodeCaptureOverlayStyle]: {
                    DefaultBrush: {
                        fillColor: Color;
                        strokeColor: Color;
                        strokeWidth: number;
                    };
                };
            };
        };
        BarcodeCaptureSettings: {
            codeDuplicateFilter: number;
        };
        RecommendedCameraSettings: CameraSettings;
    };
    BarcodeTracking: {
        BarcodeTrackingBasicOverlay: {
            defaultStyle: BarcodeTrackingBasicOverlayStyle;
            DefaultBrush: {
                fillColor: Color;
                strokeColor: Color;
                strokeWidth: number;
            };
            styles: {
                [key in BarcodeTrackingBasicOverlayStyle]: {
                    DefaultBrush: {
                        fillColor: Color;
                        strokeColor: Color;
                        strokeWidth: number;
                    };
                };
            };
        };
        RecommendedCameraSettings: CameraSettings;
    };
    SparkCapture: {
        SparkCaptureSettings: {
            codeDuplicateFilter: number;
        };
    };
}
export interface DefaultsJSON {
    SymbologySettings: {
        [key in Symbology]: string;
    };
    SymbologyDescriptions: string[];
    CompositeTypeDescriptions: string[];
    BarcodeCapture: {
        BarcodeCaptureOverlay: {
            defaultStyle: BarcodeCaptureOverlayStyle;
            DefaultBrush: {
                fillColor: string;
                strokeColor: string;
                strokeWidth: number;
            };
            styles: Record<string, {
                DefaultBrush: {
                    fillColor: string;
                    strokeColor: string;
                    strokeWidth: number;
                };
            }>;
        };
        BarcodeCaptureSettings: {
            codeDuplicateFilter: number;
        };
        RecommendedCameraSettings: CameraSettingsDefaultsJSON;
    };
    BarcodeTracking: {
        BarcodeTrackingBasicOverlay: {
            defaultStyle: BarcodeTrackingBasicOverlayStyle;
            DefaultBrush: {
                fillColor: string;
                strokeColor: string;
                strokeWidth: number;
            };
            styles: Record<string, {
                DefaultBrush: {
                    fillColor: string;
                    strokeColor: string;
                    strokeWidth: number;
                };
            }>;
        };
        RecommendedCameraSettings: CameraSettingsDefaultsJSON;
    };
    SparkCapture: {
        SparkCaptureSettings: {
            codeDuplicateFilter: number;
        };
    };
}
export declare const defaultsFromJSON: (json: DefaultsJSON) => Defaults;
export declare let defaultValues: Defaults;
export declare function setDefaults(newDefaults: Defaults): void;
export {};
