import type { SizeWithUnit, Color } from "./Common";
import { NumberWithUnit, SizeWithUnitAndAspect } from "./Common";
import type { Viewfinder } from "./Viewfinder";
import type { RectangularViewfinderAnimation, RectangularViewfinderJSON, RectangularViewfinderLineStyle, RectangularViewfinderStyle } from "./Viewfinder+related";
import type { Serializable } from "./private/Serializable";
export declare class RectangularViewfinder implements Viewfinder, Serializable<RectangularViewfinderJSON> {
    color: Color;
    private readonly _lineStyle;
    private readonly _style;
    private readonly type;
    private _animation;
    private _dimming;
    private _sizeWithUnitAndAspect;
    constructor(style?: RectangularViewfinderStyle, lineStyle?: RectangularViewfinderLineStyle);
    get animation(): RectangularViewfinderAnimation | null;
    set animation(animation: RectangularViewfinderAnimation | null);
    get dimming(): number;
    set dimming(value: number);
    get lineStyle(): RectangularViewfinderLineStyle;
    get sizeWithUnitAndAspect(): SizeWithUnitAndAspect;
    get style(): RectangularViewfinderStyle;
    setHeightAndAspectRatio(height: NumberWithUnit, widthToHeightAspectRatio: number): void;
    setShorterDimensionAndAspectRatio(fraction: number, aspectRatio: number): void;
    setSize(size: SizeWithUnit): void;
    setWidthAndAspectRatio(width: NumberWithUnit, heightToWidthAspectRatio: number): void;
    toJSONObject(): RectangularViewfinderJSON;
}
